{
    // Plotly Express figure types and chart creation
    "Scatter Plot": {
        "prefix": "px-fig-scatter",
        "description": "Insert plotly.express scatter figure",
        "body": [
            "${1:fig} = px.scatter(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}', trendline='${6|ols,lowess,rolling,expanding,ewm|}')",
            "$1.show()",
            "$0"
        ]
    },
    "3D Scatter Plot": {
        "prefix": "px-fig-scatter_3d",
        "description": "Insert plotly.express scatter_3d figure",
        "body": [
            "${1:fig} = px.scatter_3d(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', z='${5:z}', color='${6:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Polar Scatter Plot": {
        "prefix": "px-fig-scatter_polar",
        "description": "Insert plotly.express scatter_polar figure",
        "body": [
            "${1:fig} = px.scatter_polar(data_frame=${2:$TM_SELECTED_TEXT}, r='${3:r}', theta='${4:theta}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Ternary Scatter Plot": {
        "prefix": "px-fig-scatter_ternary",
        "description": "Insert plotly.express scatter_ternary figure",
        "body": [
            "${1:fig} = px.scatter_ternary(data_frame=${2:$TM_SELECTED_TEXT}, a='${3:a}', b='${4:b}', c='${5:c}', color='${6:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Scatter Map (Mapbox)": {
        "prefix": "px-fig-scatter_mapbox",
        "description": "Insert plotly.express scatter_mapbox figure",
        "body": [
            "${1:fig} = px.scatter_mapbox(data_frame=${2:$TM_SELECTED_TEXT}, lat='${3:lat}', lon='${4:lon}', text='${5:text}', color='${6:color}', mapbox_style='${7|basic,streets,outdoors,light,dark,satellite,satellite-streets,open-street-map,white-bg,carto-positron,carto-darkmatter,stamen-terrain,stamen-toner,stamen_watercolor|}')",
            "$1.show()",
            "$0"
        ]
    },
    "Scatter Map": {
        "prefix": "px-fig-scatter_map",
        "description": "Insert plotly.express scatter_map figure",
        "body": [
            "${1:fig} = px.scatter_map(data_frame=${2:$TM_SELECTED_TEXT}, lat='${3:lat}', lon='${4:lon}', text='${5:text}', color='${6:color}', map_style='${7|basic,carto-darkmatter,carto-darkmatter-nolabels,carto-positron,carto-positron-nolabels,carto-voyager,carto-voyager-nolabels,dark,light,open-street-map,outdoors,satellite,satellite-streets,streets,white-bg|}')",
            "$1.show()",
            "$0"
        ]
    },
    "Geographic Scatter": {
        "prefix": "px-fig-scatter_geo",
        "description": "Insert plotly.express scatter_geo figure",
        "body": [
            "${1:fig} = px.scatter_geo(data_frame=${2:$TM_SELECTED_TEXT}, lat='${3:lat}', lon='${4:lon}', color='${5:color}', scope='${6|world,usa,europe,asia,africa,north america,south america|}')",
            "$1.show()",
            "$0"
        ]
    },
    "Line Plot": {
        "prefix": "px-fig-line",
        "description": "Insert plotly.express line figure",
        "body": [
            "${1:fig} = px.line(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "3D Line Plot": {
        "prefix": "px-fig-line_3d",
        "description": "Insert plotly.express line_3d figure",
        "body": [
            "${1:fig} = px.line_3d(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', z='${5:z}')",
            "$1.show()",
            "$0"
        ]
    },
    "Polar Line Plot": {
        "prefix": "px-fig-line_polar",
        "description": "Insert plotly.express line_polar figure",
        "body": [
            "${1:fig} = px.line_polar(data_frame=${2:$TM_SELECTED_TEXT}, r='${3:r}', theta='${4:theta}', color='${5:color}', line_close=${6|True,False|})",
            "$1.show()",
            "$0"
        ]
    },
    "Area Plot": {
        "prefix": "px-fig-area",
        "description": "Insert plotly.express area figure",
        "body": [
            "${1:fig} = px.area(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Bar Chart": {
        "prefix": "px-fig-bar",
        "description": "Insert plotly.express bar figure",
        "body": [
            "${1:fig} = px.bar(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}')",
            "$1.show()",
            "$0"
        ]
    },
    "Timeline Chart": {
        "prefix": "px-fig-timeline",
        "description": "Insert plotly.express timeline figure",
        "body": [
            "${1:fig} = px.timeline(data_frame=${2:$TM_SELECTED_TEXT}, x_start='${3:x_start}', x_end='${4:x_end}', y='${5:y}', color='${6:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Polar Bar Chart": {
        "prefix": "px-fig-bar_polar",
        "description": "Insert plotly.express bar_polar figure",
        "body": [
            "${1:fig} = px.bar_polar(data_frame=${2:$TM_SELECTED_TEXT}, r='${3:r}', theta='${4:theta}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Violin Plot": {
        "prefix": "px-fig-violin",
        "description": "Insert plotly.express violin figure",
        "body": [
            "${1:fig} = px.violin(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Box Plot": {
        "prefix": "px-fig-box",
        "description": "Insert plotly.express box figure",
        "body": [
            "${1:fig} = px.box(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "ECDF Plot": {
        "prefix": "px-fig-ecdf",
        "description": "Insert plotly.express ecdf figure",
        "body": [
            "${1:fig} = px.ecdf(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', color='${4:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Strip Plot": {
        "prefix": "px-fig-strip",
        "description": "Insert plotly.express strip figure",
        "body": [
            "${1:fig} = px.strip(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Histogram": {
        "prefix": "px-fig-histogram",
        "description": "Insert plotly.express histogram figure",
        "body": [
            "${1:fig} = px.histogram(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', color='${4:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Pie Chart": {
        "prefix": "px-fig-pie",
        "description": "Insert plotly.express pie figure",
        "body": [
            "${1:fig} = px.pie(data_frame=${2:$TM_SELECTED_TEXT}, names='${3:names}', values='${4:values}')",
            "$1.show()",
            "$0"
        ]
    },
    "Treemap": {
        "prefix": "px-fig-treemap",
        "description": "Insert plotly.express treemap figure",
        "body": [
            "${1:fig} = px.treemap(data_frame=${2:$TM_SELECTED_TEXT}, names='${3:names}', values='${4:values}', path=['${5:path1}','${6:path2}','${7:path3}'])",
            "$1.show()",
            "$0"
        ]
    },
    "Sunburst Chart": {
        "prefix": "px-fig-sunburst",
        "description": "Insert plotly.express sunburst figure",
        "body": [
            "${1:fig} = px.sunburst(data_frame=${2:$TM_SELECTED_TEXT}, names='${3:names}', values='${4:values}', path=['${5:path1}','${6:path2}','${7:path3}'])",
            "$1.show()",
            "$0"
        ]
    },
    "Icicle Chart": {
        "prefix": "px-fig-icicle",
        "description": "Insert plotly.express icicle figure",
        "body": [
            "${1:fig} = px.icicle(data_frame=${2:$TM_SELECTED_TEXT}, names='${3:names}', values='${4:values}', path=['${5:path1}','${6:path2}','${7:path3}'])",
            "$1.show()",
            "$0"
        ]
    },
    "Funnel Chart": {
        "prefix": "px-fig-funnel",
        "description": "Insert plotly.express funnel figure",
        "body": [
            "${1:fig} = px.funnel(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}')",
            "$1.show()",
            "$0"
        ]
    },
    "Funnel Area Chart": {
        "prefix": "px-fig-funnel_area",
        "description": "Insert plotly.express funnel_area figure",
        "body": [
            "${1:fig} = px.funnel_area(data_frame=${2:$TM_SELECTED_TEXT}, names='${3:names}', values='${4:values}')",
            "$1.show()",
            "$0"
        ]
    },
    "Scatter Matrix": {
        "prefix": "px-fig-scatter_matrix",
        "description": "Insert plotly.express scatter_matrix figure",
        "body": [
            "${1:fig} = px.scatter_matrix(data_frame=${2:$TM_SELECTED_TEXT}, dimensions=['${3:dim1}','${4:dim2}','${5:dim3}','${6:dim4}'], color='${7:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Parallel Coordinates": {
        "prefix": "px-fig-parallel_coordinates",
        "description": "Insert plotly.express parallel_coordinates figure",
        "body": [
            "${1:fig} = px.parallel_coordinates(data_frame=${2:$TM_SELECTED_TEXT}, dimensions=['${3:dim1}','${4:dim2}','${5:dim3}','${6:dim4}'], color='${7:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Parallel Categories": {
        "prefix": "px-fig-parallel_categories",
        "description": "Insert plotly.express parallel_categories figure",
        "body": [
            "${1:fig} = px.parallel_categories(data_frame=${2:$TM_SELECTED_TEXT}, dimensions=['${3:dim1}','${4:dim2}','${5:dim3}','${6:dim4}'], color='${7:color}')",
            "$1.show()",
            "$0"
        ]
    },
    "Choropleth Map": {
        "prefix": "px-fig-choropleth",
        "description": "Insert plotly.express choropleth figure",
        "body": [
            "${1:fig} = px.choropleth(data_frame=${2:$TM_SELECTED_TEXT}, geojson=${3:geojson}, locations='${4:locations}', color='${5:color}', featureidkey='${6:featurekeyid}')",
            "$1.show()",
            "$0"
        ]
    },
    "Choropleth Mapbox": {
        "prefix": "px-fig-choropleth_mapbox",
        "description": "Insert plotly.express choropleth_mapbox figure",
        "body": [
            "${1:fig} = px.choropleth_mapbox(data_frame=${2:$TM_SELECTED_TEXT}, geojson=${3:geojson}, locations='${4:locations}', color='${5:color}', featureidkey='${6:featurekeyid}', mapbox_style='${7|basic,streets,outdoors,light,dark,satellite,satellite-streets,open-street-map,white-bg,carto-positron,carto-darkmatter,stamen-terrain,stamen-toner,stamen_watercolor|}')",
            "$1.show()",
            "$0"
        ]
    },
    "Density Contour": {
        "prefix": "px-fig-density_contour",
        "description": "Insert plotly.express density_contour figure",
        "body": [
            "${1:fig} = px.density_contour(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', color='${5:color}', nbinsx=${6:50}, nbinsy=${7:50}, trendline='${8|ols,lowess,rolling,expanding,ewm|}')",
            "$1.show()",
            "$0"
        ]
    },
    "Density Heatmap": {
        "prefix": "px-fig-density_heatmap",
        "description": "Insert plotly.express density_heatmap figure",
        "body": [
            "${1:fig} = px.density_heatmap(data_frame=${2:$TM_SELECTED_TEXT}, x='${3:x}', y='${4:y}', nbinsx=${5:50}, nbinsy=${6:50})",
            "$1.show()",
            "$0"
        ]
    },
    "Image Show": {
        "prefix": "px-fig-imshow",
        "description": "Insert plotly.express imshow figure",
        "body": [
            "${1:fig} = px.imshow(img=${2:image_array})",
            "$1.show()",
            "$0"
        ]
    }
}
